---
name: Apigee KVM deploy
on:
  workflow_dispatch:
    inputs:
      deployment-env:
        type: choice
        required: true
        description: Environment to deploy
        options:
          - eval
          - dev
          - test
          - uat
          - stage
          - prod
      deployment-region:
        type: choice
        description: Region to deploy
        options:
          - esi-apigee-x-394004
          - NA
     deployment-apitype:
        type: choice
        description: Api to deploy
        options:
          - sharedflow
          - proxy
env:
  DEPLOYMENT_NAME: Apigee sharedflow
  APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
  APIGEE_ENV: ${{ secrets.APIGEE_ENV }}
  API_VERSION: ${{ secrets.API_VERSION }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  WORKFLOW_IDENTITY_FEDERATION_NAME: ${{ secrets.WORKFLOW_IDENTITY_FEDERATION_NAME }}
  AUTHOR_EMAIL: veenakumari402@gmail.com
  APIGEE_DEPLOYMENT_SUFFIX: relase_dev
  APIGEE_BUILD_DEPLOYMENT_SUFFIX: apigee_relase_dev
jobs:
  apigee-config-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.11
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - id: auth
        name: Authenticate to Google Apigee Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/127369686749/locations/global/workloadIdentityPools/pavan-apigee-git/providers/pavan-apigee-git
          service_account: workload-identity-federation@esi-apigee-x-394004.iam.gserviceaccount.com
      - name: mvn deploy config
        run: mvn install -Peval -Dapigee.org=${{
          github.event.inputs.deployment-region }} -Denv=${{
          github.event.inputs.deployment-env}} -Dbearer='${{ steps.auth.outputs.access_token }}' -Dapigee.apitype=${{
          github.event.inputs.deployment-apitype }} 
           -Dfile=./security-sharedflow/sharedflows
      
      # - name: mvn deploy config
      #   run: mvn apigee-config:${{ github.event.inputs.deployment-config }} -P eval
      #     -Dbearer='${{ steps.auth.outputs.access_token }}' -Dapigee.org=${{
      #     github.event.inputs.deployment-region }} -Denv=${{
      #     github.event.inputs.deployment-env}} -Dapigee.config.dir=./apiconfig -Dapigee.app.ignoredeveloperapps=true
      #     -Dapigee.config.options=update
